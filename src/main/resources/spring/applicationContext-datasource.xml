<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">


	<!-- spring管理事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/hc360/ework/dao/mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	
	
	<!-- Spring的声明式事务管理  -->
	<!-- 设置与事务有关的各种属性  -->
 	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="insert*"  propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>
	

	<!-- 声明切入点 -->
	<aop:config>
		<aop:pointcut id="loginPointCuts"
			expression="execution(* com.hc360.ework.service.*.*(..))" />
			
		<aop:advisor advice-ref="txAdvice" pointcut-ref="loginPointCuts" />
	</aop:config>
	
	

	<!-- 通过扫描的模式,自动注入bean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hc360.ework.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> 
	</bean>
	
	
	
	<!--生产环境数据源配置 -->   
	<beans profile="production">
		<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
			<property name="jndiName" value="java:comp/env/eworkdb" /> 
		</bean>
	</beans>

	<!--开发环境数据源配置 -->
	<beans profile="dev,test">
		<!-- 数据源配置方式1:导入JDBC属性文件 -->
		<context:property-placeholder location="classpath:jdbc.properties" />
		
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driverClassName}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="maxActive" value="${jdbc.maxActive}" />
			<property name="maxIdle" value="${jdbc.maxIdle}" />
			<property name="maxWait" value="${jdbc.maxWait}" />
		</bean>
		
	</beans>
	
</beans>
